<?php
/**
 * Project: prikr-image-offloader
 * Author: Koen Dolron
 * Copyright Â© Prikr 
*/

if (!defined('ABSPATH')) exit; // Exit if accessed directly

use ParagonIE\Sodium\Core\Curve25519\H;

/**
 * Generated by the WordPress Option Page generator
 * at http://jeremyhixon.com/wp-tools/option-page/
 */

class WpImageOffloader
{
  private $wps3_image_offloader_options;

  public function __construct()
  {
    add_action('admin_menu', array($this, 'wps3_image_offloader_add_plugin_page'));
    add_action('admin_init', array($this, 'wps3_image_offloader_page_init'));
  }

  public function wps3_image_offloader_add_plugin_page()
  {
    add_options_page(
      'Image Offloader', // page_title
      'Image Offloader', // menu_title
      'manage_options', // capability
      'image-offloader', // menu_slug
      array($this, 'wps3_image_offloader_create_admin_page') // function
    );
  }

  public function wps3_image_offloader_create_admin_page()
  {
    $this->wps3_image_offloader_options = get_option('wps3_image_offloader'); ?>

    <div class="wrap">
      <h2>Image Offloader</h2>
      <p>Set your AWS S3 Bucket settings below.</p>
      <?php settings_errors(); ?>

      <form method="post" action="options.php">
        <?php
        settings_fields('wps3_image_offloader_option_group');
        do_settings_sections('wps3-image-offloader-admin');
        submit_button();
        ?>
      </form>
    </div>
<?php }

  public function wps3_image_offloader_page_init()
  {
    register_setting(
      'wps3_image_offloader_option_group', // option_group
      'wps3_image_offloader', // option_name
      array($this, 'wps3_image_offloader_sanitize') // sanitize_callback
    );

    add_settings_section(
      'wps3_image_offloader_setting_section', // id
      'Settings', // title
      array($this, 'wps3_image_offloader_section_info'), // callback
      'wps3-image-offloader-admin' // page
    );

    add_settings_field(
      'wps3_activate_offloading', // id
      'Activate offloading', // title
      array($this, 'wps3_activate_offloading_callback'), // callback
      'wps3-image-offloader-admin', // page
      'wps3_image_offloader_setting_section' // section
    );

    add_settings_field(
      'wps3_activate_cdn', // id
      'Activate CDN', // title
      array($this, 'wps3_activate_cdn_callback'), // callback
      'wps3-image-offloader-admin', // page
      'wps3_image_offloader_setting_section' // section
    );

    add_settings_field(
      'wps3_bucket_name', // id
      'Bucket name', // title
      array($this, 'wps3_bucket_name_callback'), // callback
      'wps3-image-offloader-admin', // page
      'wps3_image_offloader_setting_section' // section
    );

    add_settings_field(
      'wps3_bucket_region', // id
      'Bucket region', // title
      array($this, 'wps3_bucket_region_callback'), // callback
      'wps3-image-offloader-admin', // page
      'wps3_image_offloader_setting_section' // section
    );
    
    add_settings_field(
      'wps3_remove_images', // id
      'Remove images', // title
      array($this, 'wps3_remove_images_callback'), // callback
      'wps3-image-offloader-admin', // page
      'wps3_image_offloader_setting_section' // section
    );

    add_settings_section(
      'wps3_aws_credentials_section', // id
      'AWS credentials', // title
      array($this, 'wps3_image_offloader_section_info'), // callback
      'wps3-image-offloader-admin' // page
    );

    add_settings_field(
      'wps3_aws_key', // id
      'AWS Key', // title
      array($this, 'wps3_aws_key_callback'), // callback
      'wps3-image-offloader-admin', // page
      'wps3_aws_credentials_section' // section
    );

    add_settings_field(
      'wps3_aws_secret', // id
      'AWS Secret', // title
      array($this, 'wps3_aws_secret_callback'), // callback
      'wps3-image-offloader-admin', // page
      'wps3_aws_credentials_section' // section
    );


    add_settings_section(
      'wps3_developer_section', // id
      'Developer info', // title
      array($this, 'wps3_image_offloader_developer_section_info'), // callback
      'wps3-image-offloader-admin' // page
    );

  }

  public function wps3_image_offloader_sanitize($input)
  {
    $sanitary_values = array();
    if (isset($input['wps3_activate_offloading'])) {
      $sanitary_values['wps3_activate_offloading'] = $input['wps3_activate_offloading'];
    }

    if (isset($input['wps3_activate_cdn'])) {
      $sanitary_values['wps3_activate_cdn'] = $input['wps3_activate_cdn'];
    }

    if (isset($input['wps3_bucket_name'])) {
      $sanitary_values['wps3_bucket_name'] = sanitize_text_field($input['wps3_bucket_name']);
    }

    if (isset($input['wps3_bucket_region'])) {
      $sanitary_values['wps3_bucket_region'] = sanitize_text_field($input['wps3_bucket_region']);
    }

    if (isset($input['wps3_aws_key'])) {
      $sanitary_values['wps3_aws_key'] = sanitize_text_field($input['wps3_aws_key']);
    }

    if (isset($input['wps3_aws_secret'])) {
      $sanitary_values['wps3_aws_secret'] = sanitize_text_field($input['wps3_aws_secret']);
    }

    if (isset($input['wps3_remove_images'])) {
      $sanitary_values['wps3_remove_images'] = $input['wps3_remove_images'];
    }

    return $sanitary_values;
  }

  public function wps3_image_offloader_section_info()
  {
  }
  public function wps3_image_offloader_developer_section_info()
  {
    echo '<p>Available WP CLI commands</p>';
    if (!defined('WPS3_CLI_COMMAND')) {
      echo '<p>Offloading is not activated. Activate offloading to show the WP CLI commands.</p>';
      return;
    }
    echo '<ul>';
    echo '<li><code>wp '.WPS3_CLI_COMMAND.' offload-images --batch-size=20 --timeout=10</code> - Offload all images to S3.</li>';
    echo '<li><code>wp '.WPS3_CLI_COMMAND.' delete-s3url --dry-run</code> - Delete the <code>s3_url</code> post meta from all images.</li>';
    echo '</ul>';
  }

  public function wps3_activate_offloading_callback()
  {
    printf(
      '<input type="checkbox" name="wps3_image_offloader[wps3_activate_offloading]" id="wps3_activate_offloading" value="wps3_activate_offloading" %s> <label for="wps3_activate_offloading">Activate offloading of newly uploaded images to AWS.</label>',
      (isset($this->wps3_image_offloader_options['wps3_activate_offloading']) && $this->wps3_image_offloader_options['wps3_activate_offloading'] === 'wps3_activate_offloading') ? 'checked' : ''
    );
  }

  public function wps3_activate_cdn_callback()
  {
    printf(
      '<input type="checkbox" name="wps3_image_offloader[wps3_activate_cdn]" id="wps3_activate_cdn" value="wps3_activate_cdn" %s> <label for="wps3_activate_cdn">Start serving the images from your CDN.</label>',
      (isset($this->wps3_image_offloader_options['wps3_activate_cdn']) && $this->wps3_image_offloader_options['wps3_activate_cdn'] === 'wps3_activate_cdn') ? 'checked' : ''
    );
  }

  public function wps3_bucket_name_callback()
  {
    printf(
      '<input class="regular-text" type="text" name="wps3_image_offloader[wps3_bucket_name]" id="wps3_bucket_name" value="%s" placeholder="e.g. cdn.yourdomain.com">',
      isset($this->wps3_image_offloader_options['wps3_bucket_name']) ? esc_attr($this->wps3_image_offloader_options['wps3_bucket_name']) : ''
    );
  }

  public function wps3_bucket_region_callback()
  {
    printf(
      '<input class="regular-text" type="text" name="wps3_image_offloader[wps3_bucket_region]" id="wps3_bucket_region" value="%s" placeholder="e.g. eu-central-1">',
      isset($this->wps3_image_offloader_options['wps3_bucket_region']) ? esc_attr($this->wps3_image_offloader_options['wps3_bucket_region']) : ''
    );
  }

  public function wps3_aws_key_callback()
  {
    printf(
      '<input class="regular-text" type="text" name="wps3_image_offloader[wps3_aws_key]" id="wps3_aws_key" value="%s">',
      isset($this->wps3_image_offloader_options['wps3_aws_key']) ? esc_attr($this->wps3_image_offloader_options['wps3_aws_key']) : ''
    );
  }
  public function wps3_aws_secret_callback()
  {
    printf(
      '<input class="regular-text" type="password" name="wps3_image_offloader[wps3_aws_secret]" id="wps3_aws_secret" value="%s">',
      isset($this->wps3_image_offloader_options['wps3_aws_secret']) ? esc_attr($this->wps3_image_offloader_options['wps3_aws_secret']) : ''
    );
  }

  public function wps3_remove_images_callback()
  {
    printf(
      '<input type="checkbox" name="wps3_image_offloader[wps3_remove_images]" id="wps3_remove_images" value="wps3_remove_images" %s> <label for="wps3_remove_images">Remove the images from the server after they are uploaded to s3. <b>Warning:</b> this cannot be undone.</label>',
      (isset($this->wps3_image_offloader_options['wps3_remove_images']) && $this->wps3_image_offloader_options['wps3_remove_images'] === 'wps3_remove_images') ? 'checked' : ''
    );
  }
}

if (is_admin()) {
  $wps3_image_offloader = new WpImageOffloader();
}

/* 
 * Retrieve this value with:
 * $wps3_image_offloader_options = get_option( 'wps3_image_offloader' ); // Array of All Options
 * $wps3_activate_offloading = $wps3_image_offloader_options['wps3_activate_offloading']; // wps3 Activate bucket
 * $wps3_bucket_name = $wps3_image_offloader_options['wps3_bucket_name']; // wps3 Bucket name
 * $wps3_bucket_region = $wps3_image_offloader_options['wps3_bucket_region']; // wps3 Bucket region
 * $wps3_remove_images = $wps3_image_offloader_options['wps3_remove_images']; // wps3 Remove images
 */
