<?php
if (defined('WP_CLI') && WP_CLI) {
    class MediaOffloaderRemoveS3Url
    {
        /**
         * Delete postmeta records.
         *
         * ## OPTIONS
         *
         * [--dry-run]
         * : Perform a dry run without actually deleting records.
         *
         * @param array $args
         * @param array $assoc_args
         */
        public function delete_postmeta($args, $assoc_args)
        {
            global $wpdb;

            $dry_run = isset($assoc_args['dry-run']) ? true : false;

            if ($dry_run) {
                WP_CLI::line('Running in dry-run mode. No records will be deleted.');
            }

            // Create a temporary table to store post_ids to delete
            $wpdb->query( "CREATE TEMPORARY TABLE tmp_post_ids AS
                SELECT post_id
                FROM {$wpdb->postmeta}
                WHERE meta_key = '_wp_attached_file'
                AND meta_value LIKE '%-scaled%';" );

            // Delete records from wp_postmeta using a join with the temporary table
            $query = "
                DELETE pm
                FROM {$wpdb->postmeta} pm
                INNER JOIN tmp_post_ids tmp
                ON pm.post_id = tmp.post_id
                WHERE pm.meta_key = 's3_url';
            ";

            if ( $dry_run ) {
                WP_CLI::line( 'Dry run query: ' . $query );
            } else {
                $wpdb->query( $query );
                WP_CLI::success( 'Postmeta records deleted successfully.' );
            }

            // Drop the temporary table
            $wpdb->query( 'DROP TEMPORARY TABLE IF EXISTS tmp_post_ids;' );
        }
    }

    WP_CLI::add_command(
        WPS3_CLI_COMMAND . ' delete-s3url',
        function( $args, $assoc_args ) {
            $mediaOffloaderRemoveS3Url = new MediaOffloaderRemoveS3Url();
            $mediaOffloaderRemoveS3Url->delete_postmeta( $args, $assoc_args );
        },
        [
            'shortdesc' => 'Delete the s3_url postmeta that was generated by this plugin.'
        ]
    );
}
